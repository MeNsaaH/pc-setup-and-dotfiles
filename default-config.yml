---
downloads: ~/.ansible-downloads/

# Set to 'true' to configure the Dock via dockutil.
configure_dock: true
dockitems_remove:
  - Launchpad
  - TV
  - FaceTime
  - Podcasts
  - "App Store"
dockitems_persist:
  # - name: "Authy Desktop"
  #   path: "/Applications/Authy Desktop.app/"
  #   pos: 10
  - name: "Google Chrome"
    path: "/Applications/Google Chrome.app/"
    pos: 11

homebrew_installed_packages:
  - age
  - aquasecurity/trivy/trivy
  - ansible-lint
  - argocd
  - asdf
  - autoconf
  - aws-vault
  - awscli
  - azure-cli
  - bash
  - bat
  - bfg
  - colordiff
  - composer
  - derailed/k9s/k9s
  - diff-so-fancy
  - direnv
  - docker-credential-helper-ecr
  - duf
  - elixir
  - fzf
  - hadolint
  - hashicorp/tap/vault
  - hashicorp/tap/packer
  - helm
  - gh
  - git-secrets
  - gitleaks
  - go
  # - google-cloud-sdk
  - goenv
  - gnu-tar
  - gnu-sed
  - gnupg
  - grpcurl
  - htop
  - int128/kubelogin/kubelogin 
  - jq
  - kind
  - kops
  - kubernetes-cli
  - kubeseal
  - kubebuilder
  - kustomize
  - mercurial
  - minikube
  - openjdk
  - podman
  - pre-commit
  - pyenv
  - rbenv
  - shellcheck
  - shfmt
  - sops
  - telnet
  - name: terraform
    state: absent
    install_options: ignore-dependencies # terraform is managed by tfenv
  - terraform-docs
  - terraformer
#  - name: terragrunt
#    install_options: ignore-dependencies # terraform is managed by tfenv
  - tfenv
  - tflint
  - tmux
  - tree
  - ubuntu/microk8s/microk8s
  - warrensbox/tap/tgswitch
  - virtualenvwrapper
  - yamlfix
  - yamllint
  - yq
  - ytt

homebrew_taps:
  # - homebrew/core
  # - homebrew/cask
  # - homebrew/cask-fonts
  - hashicorp/tap
  - vmware-tanzu/carvel

homebrew_cask_appdir: /Applications
homebrew_cask_apps:
  # - 1password
  - appcleaner
  # - authy
  - cursor
  - docker
  - flycut
  - insomnia
  - iterm2
  # - google-chrome
  - joplin
  - keep
  - lastpass
  - lens
  - macvim
  - miro
  - monitorcontrol
  - obs
  - orbstack
  - openvpn-connect
  - pritunl
  - session-manager-plugin
  # - slack
  - todoist
  - visual-studio-code
#  - virtualbox
  - vlc
  - whatsapp
  # - zoom

# See `geerlingguy.mas` role documentation for usage instructions.
mas_installed_apps: []
mas_email: ""
mas_password: ""

osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages: []
# - name: drush
#   state: present # present/absent, default: present
#   version: "^8.1" # default: N/A
#
gem_packages: []
# - name: bundler
#   state: present # present/absent/latest, default: present
#   version: "~> 1.15.1" # default: N/A

npm_packages:
  - npm
  - cspell
  - yarn

pip_packages: []
  # - virtualenvwrapper
  # - yamlfix
  # - yamllint

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: []

# iterm2-shell config
iterm2_normal_font: "Monaco 12"
iterm2_non_ascii_font: "MesloLGS-NF-Regular 12"
iterm2_shell_integration_script: .iterm2_shell_integration.zsh
# base url to download from
iterm2_shell_integration_download_url: https://iterm2.com/shell_integration/zsh

# Kubectl Plugins
kubectl_plugins:
  - access-matrix
  - ctx
  - cost
  - deprecations
  - df-pv
  # - doctor
  - foreach
  - get-all
  - iexec
  # - ingress-nginx
  - node-shell
  - neat
  - ns
  - popeye
  - prompt
  - rbac-lookup
  - rolesum
  - score
  - tail
  - tree
  - who-can
  - whoami

# Fonts must point to a repository/archived repo with a directory containing .ttf or .otf files
fonts:
  - name: Monaco
    repo: https://github.com/Karmenzind/monaco-nerd-fonts.git
    dirs: ["fonts"]
  - name: Meslo
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
    dirs: ["."]
  - name: FiraCode
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/FiraCode.zip
    dirs: ["."]
  - name: Ubuntu Mono
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/UbuntuMono.zip
    dirs: ["."]

zsh_plugins:
  - name: zsh-autosuggestions
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
  - name: zsh-syntax-highlighting
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
  - name: zsh-nvm
    repo: https://github.com/lukechilds/zsh-nvm.git

required_directories:
  - "{{ ansible_env.HOME }}/.nvm"
  - "{{ ansible_env.HOME }}/.terraform.d/cache"

git:
  name: Mmadu Manasseh
  email: mmadumanasseh@gmail.com
  signingkey:
    "Manassehs-M1-MacBook-Pro": 8EED2EE211752102
    "Manasseh-Latitude-7420": 53F9E8F559F81BDA
    "Manassehs-MacBook-Pro": 43C8FF68070CF673

git_configs:
  - name: user.name
    value: "{{ git.name }}"
  - name: user.email
    value: "{{ git.email }}"
  - name: user.signingkey
    value: "{{ git.signingkey[ansible_hostname] }}"
  - name: core.excludesfile
    value: "{{ ansible_env.HOME }}/.gitignore"

snap_packages:
  - name: aws-cli
    classic: true
  - name: helm
    classic: true
  - name: go
    classic: true
  - name: kubectl
    classic: true
  - name: code
    classic: true
  - diff-so-fancy
  - kustomize
  - jq
  - yq
  - authy
  - slack
#  - docker
  - insomnia

apt_packages:
  - age
  - direnv
  - colordiff
  - fzf
  - htop
  - tmux
  - zsh
  - podman
  - gnome-tweaks
  - gnome-shell
  - gnome-shell-extensions
  - chrome-gnome-shell
  - xpad
  - vim-gtk3
  - silversearcher-ag
  - name: sops
    url: https://github.com/getsops/sops/releases/latest/download/sops_3.7.3_amd64.deb
  - name: zoom
    url: https://zoom.us/client/latest/zoom_amd64.deb
  - name: obs-studio
    repository: "ppa:obsproject/obs-studio"
  - name: google-cloud-cli
    repository: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main"
    key_url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/cloud.google.gpg
  - google-cloud-sdk-gke-gcloud-auth-plugin # not adding repo because it's already added above

github_packages:
  - name: argocd
    url: "https://github.com/argoproj/argo-cd/releases/latest/download/argocd-{{ (ansible_os_family|lower == 'debian') | ternary('linux', (ansible_os_family|lower)) }}-{{ (ansible_architecture == 'x86_64') | ternary('amd64', ansible_architecture) }}"
  - name: tfenv
    url: https://github.com/tfutils/tfenv.git
    clone: true
    depth: 1
    post_install_script: 'export PATH="$HOME/.tfenv/bin:$PATH"'
    bash_completions: ""
    zsh_completions: ""
